{"ast":null,"code":"import React from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const DeliveryFeeCalculator=_ref=>{let{inputValues}=_ref;const calculateDeliveryFee=()=>{const{cartValue,deliveryDistance,numberOfItems,orderTime}=inputValues;if(cartValue===null||deliveryDistance===null||numberOfItems===null||orderTime===null){// Input values are not complete, cannot calculate the fee\nreturn null;}// Delivery fee is 0 if cart value is greater or equal to 200\nif(cartValue>=200){let totalFee=0;return totalFee;}// Calculate small order surcharge\nconst smallOrderSurcharge=Math.max(0,10-cartValue);// Calculate base delivery fee for the first 1000 meters\nlet baseFee=2;// Calculate additional fee for every 500 meters beyond the first 1000 meters\nconst additionalDistanceFee=Math.ceil((deliveryDistance-1000)/500)*1;// Calculate item surcharge for more than 4 items\nconst itemSurcharge=numberOfItems>=5?(numberOfItems-4)*0.5:0;// Calculate bulk fee for more than 12 items\nconst bulkFee=numberOfItems>12?1.2:0;// Calculate total fee before rush hour multiplier\nlet totalFee=baseFee+additionalDistanceFee+smallOrderSurcharge+itemSurcharge+bulkFee;// Ensure the total fee does not exceed 15€\ntotalFee=Math.min(totalFee,15);// Check if it's Friday rush hours (3 - 7 PM)\nconst orderDate=new Date(orderTime);const isFridayRush=orderDate.getDay()===5&&orderDate.getHours()>=15&&orderDate.getHours()<19;// Apply rush hour multiplier if applicable\nif(isFridayRush){totalFee*=1.2;// Ensure the total fee does not exceed 15€ after applying rush hour multiplier\ntotalFee=Math.min(totalFee,15);}return totalFee;};const calculatedFee=calculateDeliveryFee();return/*#__PURE__*/_jsx(\"div\",{children:calculatedFee!==null&&/*#__PURE__*/_jsx(\"div\",{\"data-test-id\":\"fee\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Calculated Delivery Fee: \",calculatedFee.toFixed(2),\"\\u20AC\"]})})});};export default DeliveryFeeCalculator;","map":{"version":3,"names":["React","jsxs","_jsxs","jsx","_jsx","DeliveryFeeCalculator","_ref","inputValues","calculateDeliveryFee","cartValue","deliveryDistance","numberOfItems","orderTime","totalFee","smallOrderSurcharge","Math","max","baseFee","additionalDistanceFee","ceil","itemSurcharge","bulkFee","min","orderDate","Date","isFridayRush","getDay","getHours","calculatedFee","children","toFixed"],"sources":["/Users/anushaa/Documents/my-ts-react-app/src/Components/DeliveryFeeCalculator.tsx"],"sourcesContent":["import React from 'react';\n\ninterface DeliveryFeeCalculatorProps {\n  inputValues: {\n    cartValue: number | null;\n    deliveryDistance: number | null;\n    numberOfItems: number | null;\n    orderTime: Date | null;\n  };\n}\n\nconst DeliveryFeeCalculator: React.FC<DeliveryFeeCalculatorProps> = ({ inputValues }) => {\n  const calculateDeliveryFee = () => {\n    const { cartValue, deliveryDistance, numberOfItems, orderTime } = inputValues;\n\n    if (cartValue === null || deliveryDistance === null || numberOfItems === null || orderTime === null) {\n      // Input values are not complete, cannot calculate the fee\n\n      return null;\n    }\n\n    // Delivery fee is 0 if cart value is greater or equal to 200\n    if (cartValue >= 200) {\n      let totalFee = 0;\n      return totalFee;\n\n    }\n\n    // Calculate small order surcharge\n    const smallOrderSurcharge = Math.max(0, 10 - cartValue);\n\n    // Calculate base delivery fee for the first 1000 meters\n    let baseFee = 2;\n\n    // Calculate additional fee for every 500 meters beyond the first 1000 meters\n    const additionalDistanceFee = Math.ceil((deliveryDistance - 1000) / 500) * 1;\n\n    // Calculate item surcharge for more than 4 items\n    const itemSurcharge = numberOfItems >= 5 ? (numberOfItems - 4) * 0.5 : 0;\n\n    // Calculate bulk fee for more than 12 items\n    const bulkFee = numberOfItems > 12 ? 1.2 : 0;\n\n    // Calculate total fee before rush hour multiplier\n    let totalFee = baseFee + additionalDistanceFee + smallOrderSurcharge + itemSurcharge + bulkFee;\n\n    // Ensure the total fee does not exceed 15€\n    totalFee = Math.min(totalFee, 15);\n\n    // Check if it's Friday rush hours (3 - 7 PM)\n    const orderDate = new Date(orderTime);\n    const isFridayRush = orderDate.getDay() === 5 && orderDate.getHours() >= 15 && orderDate.getHours() < 19;\n\n    // Apply rush hour multiplier if applicable\n    if (isFridayRush) {\n      totalFee *= 1.2;\n      // Ensure the total fee does not exceed 15€ after applying rush hour multiplier\n      totalFee = Math.min(totalFee, 15);\n    }\n\n    return totalFee;\n  };\n\n  const calculatedFee = calculateDeliveryFee();\n\n  return (\n    <div>\n      {calculatedFee !== null && (\n        <div data-test-id=\"fee\">\n          <p>Calculated Delivery Fee: {calculatedFee.toFixed(2)}€</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DeliveryFeeCalculator;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAW1B,KAAM,CAAAC,qBAA2D,CAAGC,IAAA,EAAqB,IAApB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CAClF,KAAM,CAAAE,oBAAoB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAEC,SAAS,CAAEC,gBAAgB,CAAEC,aAAa,CAAEC,SAAU,CAAC,CAAGL,WAAW,CAE7E,GAAIE,SAAS,GAAK,IAAI,EAAIC,gBAAgB,GAAK,IAAI,EAAIC,aAAa,GAAK,IAAI,EAAIC,SAAS,GAAK,IAAI,CAAE,CACnG;AAEA,MAAO,KAAI,CACb,CAEA;AACA,GAAIH,SAAS,EAAI,GAAG,CAAE,CACpB,GAAI,CAAAI,QAAQ,CAAG,CAAC,CAChB,MAAO,CAAAA,QAAQ,CAEjB,CAEA;AACA,KAAM,CAAAC,mBAAmB,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE,EAAE,CAAGP,SAAS,CAAC,CAEvD;AACA,GAAI,CAAAQ,OAAO,CAAG,CAAC,CAEf;AACA,KAAM,CAAAC,qBAAqB,CAAGH,IAAI,CAACI,IAAI,CAAC,CAACT,gBAAgB,CAAG,IAAI,EAAI,GAAG,CAAC,CAAG,CAAC,CAE5E;AACA,KAAM,CAAAU,aAAa,CAAGT,aAAa,EAAI,CAAC,CAAG,CAACA,aAAa,CAAG,CAAC,EAAI,GAAG,CAAG,CAAC,CAExE;AACA,KAAM,CAAAU,OAAO,CAAGV,aAAa,CAAG,EAAE,CAAG,GAAG,CAAG,CAAC,CAE5C;AACA,GAAI,CAAAE,QAAQ,CAAGI,OAAO,CAAGC,qBAAqB,CAAGJ,mBAAmB,CAAGM,aAAa,CAAGC,OAAO,CAE9F;AACAR,QAAQ,CAAGE,IAAI,CAACO,GAAG,CAACT,QAAQ,CAAE,EAAE,CAAC,CAEjC;AACA,KAAM,CAAAU,SAAS,CAAG,GAAI,CAAAC,IAAI,CAACZ,SAAS,CAAC,CACrC,KAAM,CAAAa,YAAY,CAAGF,SAAS,CAACG,MAAM,CAAC,CAAC,GAAK,CAAC,EAAIH,SAAS,CAACI,QAAQ,CAAC,CAAC,EAAI,EAAE,EAAIJ,SAAS,CAACI,QAAQ,CAAC,CAAC,CAAG,EAAE,CAExG;AACA,GAAIF,YAAY,CAAE,CAChBZ,QAAQ,EAAI,GAAG,CACf;AACAA,QAAQ,CAAGE,IAAI,CAACO,GAAG,CAACT,QAAQ,CAAE,EAAE,CAAC,CACnC,CAEA,MAAO,CAAAA,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAe,aAAa,CAAGpB,oBAAoB,CAAC,CAAC,CAE5C,mBACEJ,IAAA,QAAAyB,QAAA,CACGD,aAAa,GAAK,IAAI,eACrBxB,IAAA,QAAK,eAAa,KAAK,CAAAyB,QAAA,cACrB3B,KAAA,MAAA2B,QAAA,EAAG,2BAAyB,CAACD,aAAa,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAC,EAAG,CAAC,CACxD,CACN,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
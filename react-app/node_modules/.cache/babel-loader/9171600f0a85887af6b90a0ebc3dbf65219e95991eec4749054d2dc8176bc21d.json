{"ast":null,"code":"var _jsxFileName = \"/Users/anushaa/Documents/my-ts-react-app/src/App.tsx\",\n  _s = $RefreshSig$();\n// src/App.tsx\n\nimport React, { useState } from 'react';\nimport InputForm from './Components/InputField';\nimport DeliveryFeeCalculator from './Components/DeliveryFeeCalculator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [calculatedFee, setCalculatedFee] = useState(null);\n  const [inputValues, setInputValues] = useState({\n    cartValue: null,\n    deliveryDistance: null,\n    numberOfItems: null,\n    orderTime: null\n  });\n  const calculateDeliveryFee = inputValues => {\n    // Set the input values in the state\n    setInputValues(inputValues);\n\n    // Calculate the delivery fee and update the state\n    setCalculatedFee(calculateDeliveryFeeLogic(inputValues));\n  };\n  const calculateDeliveryFeeLogic = inputValues => {\n    const {\n      cartValue,\n      deliveryDistance,\n      numberOfItems,\n      orderTime\n    } = inputValues;\n    if (cartValue === null || deliveryDistance === null || numberOfItems === null || orderTime === null) {\n      // Input values are not complete, cannot calculate the fee\n      return null;\n    }\n\n    // Replace this with your actual logic based on the provided rules\n    const smallOrderSurcharge = Math.max(0, 10 - cartValue);\n    let baseFee = 2;\n    const additionalDistanceFee = Math.ceil((deliveryDistance - 1000) / 500) * 1;\n    const itemSurcharge = numberOfItems >= 5 ? (numberOfItems - 4) * 0.5 : 0;\n    const bulkFee = numberOfItems > 12 ? 1.2 : 0;\n    let totalFee = baseFee + additionalDistanceFee + smallOrderSurcharge + itemSurcharge + bulkFee;\n    totalFee = Math.min(totalFee, 15);\n    const orderDate = new Date(orderTime);\n    const isFridayRush = orderDate.getUTCDay() === 5 && orderDate.getUTCHours() >= 15 && orderDate.getUTCHours() < 19;\n    if (isFridayRush) {\n      totalFee *= 1.2;\n      totalFee = Math.min(totalFee, 15);\n    }\n    return totalFee;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      onCalculate: calculateDeliveryFee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeliveryFeeCalculator, {\n      inputValues: inputValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tFOzTYx52E5TlPBne8/jpn+g+xc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputForm","DeliveryFeeCalculator","jsxDEV","_jsxDEV","App","_s","calculatedFee","setCalculatedFee","inputValues","setInputValues","cartValue","deliveryDistance","numberOfItems","orderTime","calculateDeliveryFee","calculateDeliveryFeeLogic","smallOrderSurcharge","Math","max","baseFee","additionalDistanceFee","ceil","itemSurcharge","bulkFee","totalFee","min","orderDate","Date","isFridayRush","getUTCDay","getUTCHours","className","children","onCalculate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anushaa/Documents/my-ts-react-app/src/App.tsx"],"sourcesContent":["// src/App.tsx\n\nimport React, { useState } from 'react';\nimport InputForm, { InputValues } from './Components/InputField';\nimport DeliveryFeeCalculator from './Components/DeliveryFeeCalculator';\n\nfunction App() {\n  const [calculatedFee, setCalculatedFee] = useState<number | null>(null);\n  const [inputValues, setInputValues] = useState<InputValues>({\n    cartValue: null,\n    deliveryDistance: null,\n    numberOfItems: null,\n    orderTime: null,\n  });\n\n  const calculateDeliveryFee = (inputValues: InputValues) => {\n    // Set the input values in the state\n    setInputValues(inputValues);\n\n    // Calculate the delivery fee and update the state\n    setCalculatedFee(calculateDeliveryFeeLogic(inputValues));\n  };\n\n  const calculateDeliveryFeeLogic = (inputValues: InputValues): number | null => {\n    const { cartValue, deliveryDistance, numberOfItems, orderTime } = inputValues;\n\n    if (cartValue === null || deliveryDistance === null || numberOfItems === null || orderTime === null) {\n      // Input values are not complete, cannot calculate the fee\n      return null;\n    }\n\n    // Replace this with your actual logic based on the provided rules\n    const smallOrderSurcharge = Math.max(0, 10 - cartValue);\n    let baseFee = 2;\n    const additionalDistanceFee = Math.ceil((deliveryDistance - 1000) / 500) * 1;\n    const itemSurcharge = numberOfItems >= 5 ? (numberOfItems - 4) * 0.5 : 0;\n    const bulkFee = numberOfItems > 12 ? 1.2 : 0;\n    let totalFee = baseFee + additionalDistanceFee + smallOrderSurcharge + itemSurcharge + bulkFee;\n    totalFee = Math.min(totalFee, 15);\n\n    const orderDate = new Date(orderTime);\n    const isFridayRush = orderDate.getUTCDay() === 5 && orderDate.getUTCHours() >= 15 && orderDate.getUTCHours() < 19;\n\n    if (isFridayRush) {\n      totalFee *= 1.2;\n      totalFee = Math.min(totalFee, 15);\n    }\n\n    return totalFee;\n  };\n\n  return (\n    <div className=\"App\">\n      <InputForm onCalculate={calculateDeliveryFee} />\n      <DeliveryFeeCalculator inputValues={inputValues} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}